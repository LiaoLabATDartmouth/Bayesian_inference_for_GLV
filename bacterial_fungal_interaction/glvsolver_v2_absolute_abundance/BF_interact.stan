functions {
    vector row_wise_to_vector(matrix A) {
        int num_rows = rows(A);
        int num_cols = cols(A);
        vector[num_rows * num_cols] result;

        // Fill the result vector in row-wise order
        for (i in 1:num_rows) {
            for (j in 1:num_cols) {
                result[(i - 1) * num_cols + j] = A[i, j];
            }
        }
        return result;
    }
}
data {
	int<lower=0> N;
	vector[N] dlogX;
	matrix[N, 21] growth;
	matrix[N, 441] interaction;
	matrix[N, 126] perturbation;
}
parameters {
	real<lower=0, upper=1.00> sigma;
	vector[21] alpha;
	matrix[21, 21] beta;
	matrix[21, 6] epsilon;
}
transformed parameters {
    matrix[21, 21] constrained_beta;
    for (i in 1:21) {
        for (j in 1:21) {
            if (i == j) {
                constrained_beta[i, j] = -abs(beta[i, j]);
            } else {
                constrained_beta[i, j] = beta[i, j];
            }
        }
    }
}
model {
	sigma ~ uniform(0,1.00);
	alpha ~ normal(0,1.00);
	beta[1, 1] ~ normal(0,1.00);
	beta[1, 2] ~ normal(0,1.00);
	beta[1, 3] ~ normal(0,1.00);
	beta[1, 4] ~ normal(0,1.00);
	beta[1, 5] ~ normal(0,1.00);
	beta[1, 6] ~ normal(0,1.00);
	beta[1, 7] ~ normal(0,1.00);
	beta[1, 8] ~ normal(0,1.00);
	beta[1, 9] ~ normal(0,1.00);
	beta[1, 10] ~ normal(0,1.00);
	beta[1, 11] ~ normal(0,1.00);
	beta[1, 12] ~ normal(0,1.00);
	beta[1, 13] ~ normal(0,1.00);
	beta[1, 14] ~ normal(0,1.00);
	beta[1, 15] ~ normal(0,1.00);
	beta[1, 16] ~ normal(0,1.00);
	beta[1, 17] ~ normal(0,1.00);
	beta[1, 18] ~ normal(0,1.00);
	beta[1, 19] ~ normal(0,1.00);
	beta[1, 20] ~ normal(0,1.00);
	beta[1, 21] ~ normal(0,1.00);
	beta[2, 1] ~ normal(0,1.00);
	beta[2, 2] ~ normal(0,1.00);
	beta[2, 3] ~ normal(0,1.00);
	beta[2, 4] ~ normal(0,1.00);
	beta[2, 5] ~ normal(0,1.00);
	beta[2, 6] ~ normal(0,1.00);
	beta[2, 7] ~ normal(0,1.00);
	beta[2, 8] ~ normal(0,1.00);
	beta[2, 9] ~ normal(0,1.00);
	beta[2, 10] ~ normal(0,1.00);
	beta[2, 11] ~ normal(0,1.00);
	beta[2, 12] ~ normal(0,1.00);
	beta[2, 13] ~ normal(0,1.00);
	beta[2, 14] ~ normal(0,1.00);
	beta[2, 15] ~ normal(0,1.00);
	beta[2, 16] ~ normal(0,1.00);
	beta[2, 17] ~ normal(0,1.00);
	beta[2, 18] ~ normal(0,1.00);
	beta[2, 19] ~ normal(0,1.00);
	beta[2, 20] ~ normal(0,1.00);
	beta[2, 21] ~ normal(0,1.00);
	beta[3, 1] ~ normal(0,1.00);
	beta[3, 2] ~ normal(0,1.00);
	beta[3, 3] ~ normal(0,1.00);
	beta[3, 4] ~ normal(0,1.00);
	beta[3, 5] ~ normal(0,1.00);
	beta[3, 6] ~ normal(0,1.00);
	beta[3, 7] ~ normal(0,1.00);
	beta[3, 8] ~ normal(0,1.00);
	beta[3, 9] ~ normal(0,1.00);
	beta[3, 10] ~ normal(0,1.00);
	beta[3, 11] ~ normal(0,1.00);
	beta[3, 12] ~ normal(0,1.00);
	beta[3, 13] ~ normal(0,1.00);
	beta[3, 14] ~ normal(0,1.00);
	beta[3, 15] ~ normal(0,1.00);
	beta[3, 16] ~ normal(0,1.00);
	beta[3, 17] ~ normal(0,1.00);
	beta[3, 18] ~ normal(0,1.00);
	beta[3, 19] ~ normal(0,1.00);
	beta[3, 20] ~ normal(0,1.00);
	beta[3, 21] ~ normal(0,1.00);
	beta[4, 1] ~ normal(0,1.00);
	beta[4, 2] ~ normal(0,1.00);
	beta[4, 3] ~ normal(0,1.00);
	beta[4, 4] ~ normal(0,1.00);
	beta[4, 5] ~ normal(0,1.00);
	beta[4, 6] ~ normal(0,1.00);
	beta[4, 7] ~ normal(0,1.00);
	beta[4, 8] ~ normal(0,1.00);
	beta[4, 9] ~ normal(0,1.00);
	beta[4, 10] ~ normal(0,1.00);
	beta[4, 11] ~ normal(0,1.00);
	beta[4, 12] ~ normal(0,1.00);
	beta[4, 13] ~ normal(0,1.00);
	beta[4, 14] ~ normal(0,1.00);
	beta[4, 15] ~ normal(0,1.00);
	beta[4, 16] ~ normal(0,1.00);
	beta[4, 17] ~ normal(0,1.00);
	beta[4, 18] ~ normal(0,1.00);
	beta[4, 19] ~ normal(0,1.00);
	beta[4, 20] ~ normal(0,1.00);
	beta[4, 21] ~ normal(0,1.00);
	beta[5, 1] ~ normal(0,1.00);
	beta[5, 2] ~ normal(0,1.00);
	beta[5, 3] ~ normal(0,1.00);
	beta[5, 4] ~ normal(0,1.00);
	beta[5, 5] ~ normal(0,1.00);
	beta[5, 6] ~ normal(0,1.00);
	beta[5, 7] ~ normal(0,1.00);
	beta[5, 8] ~ normal(0,1.00);
	beta[5, 9] ~ normal(0,1.00);
	beta[5, 10] ~ normal(0,1.00);
	beta[5, 11] ~ normal(0,1.00);
	beta[5, 12] ~ normal(0,1.00);
	beta[5, 13] ~ normal(0,1.00);
	beta[5, 14] ~ normal(0,1.00);
	beta[5, 15] ~ normal(0,1.00);
	beta[5, 16] ~ normal(0,1.00);
	beta[5, 17] ~ normal(0,1.00);
	beta[5, 18] ~ normal(0,1.00);
	beta[5, 19] ~ normal(0,1.00);
	beta[5, 20] ~ normal(0,1.00);
	beta[5, 21] ~ normal(0,1.00);
	beta[6, 1] ~ normal(0,1.00);
	beta[6, 2] ~ normal(0,1.00);
	beta[6, 3] ~ normal(0,1.00);
	beta[6, 4] ~ normal(0,1.00);
	beta[6, 5] ~ normal(0,1.00);
	beta[6, 6] ~ normal(0,1.00);
	beta[6, 7] ~ normal(0,1.00);
	beta[6, 8] ~ normal(0,1.00);
	beta[6, 9] ~ normal(0,1.00);
	beta[6, 10] ~ normal(0,1.00);
	beta[6, 11] ~ normal(0,1.00);
	beta[6, 12] ~ normal(0,1.00);
	beta[6, 13] ~ normal(0,1.00);
	beta[6, 14] ~ normal(0,1.00);
	beta[6, 15] ~ normal(0,1.00);
	beta[6, 16] ~ normal(0,1.00);
	beta[6, 17] ~ normal(0,1.00);
	beta[6, 18] ~ normal(0,1.00);
	beta[6, 19] ~ normal(0,1.00);
	beta[6, 20] ~ normal(0,1.00);
	beta[6, 21] ~ normal(0,1.00);
	beta[7, 1] ~ normal(0,1.00);
	beta[7, 2] ~ normal(0,1.00);
	beta[7, 3] ~ normal(0,1.00);
	beta[7, 4] ~ normal(0,1.00);
	beta[7, 5] ~ normal(0,1.00);
	beta[7, 6] ~ normal(0,1.00);
	beta[7, 7] ~ normal(0,1.00);
	beta[7, 8] ~ normal(0,1.00);
	beta[7, 9] ~ normal(0,1.00);
	beta[7, 10] ~ normal(0,1.00);
	beta[7, 11] ~ normal(0,1.00);
	beta[7, 12] ~ normal(0,1.00);
	beta[7, 13] ~ normal(0,1.00);
	beta[7, 14] ~ normal(0,1.00);
	beta[7, 15] ~ normal(0,1.00);
	beta[7, 16] ~ normal(0,1.00);
	beta[7, 17] ~ normal(0,1.00);
	beta[7, 18] ~ normal(0,1.00);
	beta[7, 19] ~ normal(0,1.00);
	beta[7, 20] ~ normal(0,1.00);
	beta[7, 21] ~ normal(0,1.00);
	beta[8, 1] ~ normal(0,1.00);
	beta[8, 2] ~ normal(0,1.00);
	beta[8, 3] ~ normal(0,1.00);
	beta[8, 4] ~ normal(0,1.00);
	beta[8, 5] ~ normal(0,1.00);
	beta[8, 6] ~ normal(0,1.00);
	beta[8, 7] ~ normal(0,1.00);
	beta[8, 8] ~ normal(0,1.00);
	beta[8, 9] ~ normal(0,1.00);
	beta[8, 10] ~ normal(0,1.00);
	beta[8, 11] ~ normal(0,1.00);
	beta[8, 12] ~ normal(0,1.00);
	beta[8, 13] ~ normal(0,1.00);
	beta[8, 14] ~ normal(0,1.00);
	beta[8, 15] ~ normal(0,1.00);
	beta[8, 16] ~ normal(0,1.00);
	beta[8, 17] ~ normal(0,1.00);
	beta[8, 18] ~ normal(0,1.00);
	beta[8, 19] ~ normal(0,1.00);
	beta[8, 20] ~ normal(0,1.00);
	beta[8, 21] ~ normal(0,1.00);
	beta[9, 1] ~ normal(0,1.00);
	beta[9, 2] ~ normal(0,1.00);
	beta[9, 3] ~ normal(0,1.00);
	beta[9, 4] ~ normal(0,1.00);
	beta[9, 5] ~ normal(0,1.00);
	beta[9, 6] ~ normal(0,1.00);
	beta[9, 7] ~ normal(0,1.00);
	beta[9, 8] ~ normal(0,1.00);
	beta[9, 9] ~ normal(0,1.00);
	beta[9, 10] ~ normal(0,1.00);
	beta[9, 11] ~ normal(0,1.00);
	beta[9, 12] ~ normal(0,1.00);
	beta[9, 13] ~ normal(0,1.00);
	beta[9, 14] ~ normal(0,1.00);
	beta[9, 15] ~ normal(0,1.00);
	beta[9, 16] ~ normal(0,1.00);
	beta[9, 17] ~ normal(0,1.00);
	beta[9, 18] ~ normal(0,1.00);
	beta[9, 19] ~ normal(0,1.00);
	beta[9, 20] ~ normal(0,1.00);
	beta[9, 21] ~ normal(0,1.00);
	beta[10, 1] ~ normal(0,1.00);
	beta[10, 2] ~ normal(0,1.00);
	beta[10, 3] ~ normal(0,1.00);
	beta[10, 4] ~ normal(0,1.00);
	beta[10, 5] ~ normal(0,1.00);
	beta[10, 6] ~ normal(0,1.00);
	beta[10, 7] ~ normal(0,1.00);
	beta[10, 8] ~ normal(0,1.00);
	beta[10, 9] ~ normal(0,1.00);
	beta[10, 10] ~ normal(0,1.00);
	beta[10, 11] ~ normal(0,1.00);
	beta[10, 12] ~ normal(0,1.00);
	beta[10, 13] ~ normal(0,1.00);
	beta[10, 14] ~ normal(0,1.00);
	beta[10, 15] ~ normal(0,1.00);
	beta[10, 16] ~ normal(0,1.00);
	beta[10, 17] ~ normal(0,1.00);
	beta[10, 18] ~ normal(0,1.00);
	beta[10, 19] ~ normal(0,1.00);
	beta[10, 20] ~ normal(0,1.00);
	beta[10, 21] ~ normal(0,1.00);
	beta[11, 1] ~ normal(0,1.00);
	beta[11, 2] ~ normal(0,1.00);
	beta[11, 3] ~ normal(0,1.00);
	beta[11, 4] ~ normal(0,1.00);
	beta[11, 5] ~ normal(0,1.00);
	beta[11, 6] ~ normal(0,1.00);
	beta[11, 7] ~ normal(0,1.00);
	beta[11, 8] ~ normal(0,1.00);
	beta[11, 9] ~ normal(0,1.00);
	beta[11, 10] ~ normal(0,1.00);
	beta[11, 11] ~ normal(0,1.00);
	beta[11, 12] ~ normal(0,1.00);
	beta[11, 13] ~ normal(0,1.00);
	beta[11, 14] ~ normal(0,1.00);
	beta[11, 15] ~ normal(0,1.00);
	beta[11, 16] ~ normal(0,1.00);
	beta[11, 17] ~ normal(0,1.00);
	beta[11, 18] ~ normal(0,1.00);
	beta[11, 19] ~ normal(0,1.00);
	beta[11, 20] ~ normal(0,1.00);
	beta[11, 21] ~ normal(0,1.00);
	beta[12, 1] ~ normal(0,1.00);
	beta[12, 2] ~ normal(0,1.00);
	beta[12, 3] ~ normal(0,1.00);
	beta[12, 4] ~ normal(0,1.00);
	beta[12, 5] ~ normal(0,1.00);
	beta[12, 6] ~ normal(0,1.00);
	beta[12, 7] ~ normal(0,1.00);
	beta[12, 8] ~ normal(0,1.00);
	beta[12, 9] ~ normal(0,1.00);
	beta[12, 10] ~ normal(0,1.00);
	beta[12, 11] ~ normal(0,1.00);
	beta[12, 12] ~ normal(0,1.00);
	beta[12, 13] ~ normal(0,1.00);
	beta[12, 14] ~ normal(0,1.00);
	beta[12, 15] ~ normal(0,1.00);
	beta[12, 16] ~ normal(0,1.00);
	beta[12, 17] ~ normal(0,1.00);
	beta[12, 18] ~ normal(0,1.00);
	beta[12, 19] ~ normal(0,1.00);
	beta[12, 20] ~ normal(0,1.00);
	beta[12, 21] ~ normal(0,1.00);
	beta[13, 1] ~ normal(0,1.00);
	beta[13, 2] ~ normal(0,1.00);
	beta[13, 3] ~ normal(0,1.00);
	beta[13, 4] ~ normal(0,1.00);
	beta[13, 5] ~ normal(0,1.00);
	beta[13, 6] ~ normal(0,1.00);
	beta[13, 7] ~ normal(0,1.00);
	beta[13, 8] ~ normal(0,1.00);
	beta[13, 9] ~ normal(0,1.00);
	beta[13, 10] ~ normal(0,1.00);
	beta[13, 11] ~ normal(0,1.00);
	beta[13, 12] ~ normal(0,1.00);
	beta[13, 13] ~ normal(0,1.00);
	beta[13, 14] ~ normal(0,1.00);
	beta[13, 15] ~ normal(0,1.00);
	beta[13, 16] ~ normal(0,1.00);
	beta[13, 17] ~ normal(0,1.00);
	beta[13, 18] ~ normal(0,1.00);
	beta[13, 19] ~ normal(0,1.00);
	beta[13, 20] ~ normal(0,1.00);
	beta[13, 21] ~ normal(0,1.00);
	beta[14, 1] ~ normal(0,1.00);
	beta[14, 2] ~ normal(0,1.00);
	beta[14, 3] ~ normal(0,1.00);
	beta[14, 4] ~ normal(0,1.00);
	beta[14, 5] ~ normal(0,1.00);
	beta[14, 6] ~ normal(0,1.00);
	beta[14, 7] ~ normal(0,1.00);
	beta[14, 8] ~ normal(0,1.00);
	beta[14, 9] ~ normal(0,1.00);
	beta[14, 10] ~ normal(0,1.00);
	beta[14, 11] ~ normal(0,1.00);
	beta[14, 12] ~ normal(0,1.00);
	beta[14, 13] ~ normal(0,1.00);
	beta[14, 14] ~ normal(0,1.00);
	beta[14, 15] ~ normal(0,1.00);
	beta[14, 16] ~ normal(0,1.00);
	beta[14, 17] ~ normal(0,1.00);
	beta[14, 18] ~ normal(0,1.00);
	beta[14, 19] ~ normal(0,1.00);
	beta[14, 20] ~ normal(0,1.00);
	beta[14, 21] ~ normal(0,1.00);
	beta[15, 1] ~ normal(0,1.00);
	beta[15, 2] ~ normal(0,1.00);
	beta[15, 3] ~ normal(0,1.00);
	beta[15, 4] ~ normal(0,1.00);
	beta[15, 5] ~ normal(0,1.00);
	beta[15, 6] ~ normal(0,1.00);
	beta[15, 7] ~ normal(0,1.00);
	beta[15, 8] ~ normal(0,1.00);
	beta[15, 9] ~ normal(0,1.00);
	beta[15, 10] ~ normal(0,1.00);
	beta[15, 11] ~ normal(0,1.00);
	beta[15, 12] ~ normal(0,1.00);
	beta[15, 13] ~ normal(0,1.00);
	beta[15, 14] ~ normal(0,1.00);
	beta[15, 15] ~ normal(0,1.00);
	beta[15, 16] ~ normal(0,1.00);
	beta[15, 17] ~ normal(0,1.00);
	beta[15, 18] ~ normal(0,1.00);
	beta[15, 19] ~ normal(0,1.00);
	beta[15, 20] ~ normal(0,1.00);
	beta[15, 21] ~ normal(0,1.00);
	beta[16, 1] ~ normal(0,1.00);
	beta[16, 2] ~ normal(0,1.00);
	beta[16, 3] ~ normal(0,1.00);
	beta[16, 4] ~ normal(0,1.00);
	beta[16, 5] ~ normal(0,1.00);
	beta[16, 6] ~ normal(0,1.00);
	beta[16, 7] ~ normal(0,1.00);
	beta[16, 8] ~ normal(0,1.00);
	beta[16, 9] ~ normal(0,1.00);
	beta[16, 10] ~ normal(0,1.00);
	beta[16, 11] ~ normal(0,1.00);
	beta[16, 12] ~ normal(0,1.00);
	beta[16, 13] ~ normal(0,1.00);
	beta[16, 14] ~ normal(0,1.00);
	beta[16, 15] ~ normal(0,1.00);
	beta[16, 16] ~ normal(0,1.00);
	beta[16, 17] ~ normal(0,1.00);
	beta[16, 18] ~ normal(0,1.00);
	beta[16, 19] ~ normal(0,1.00);
	beta[16, 20] ~ normal(0,1.00);
	beta[16, 21] ~ normal(0,1.00);
	beta[17, 1] ~ normal(0,1.00);
	beta[17, 2] ~ normal(0,1.00);
	beta[17, 3] ~ normal(0,1.00);
	beta[17, 4] ~ normal(0,1.00);
	beta[17, 5] ~ normal(0,1.00);
	beta[17, 6] ~ normal(0,1.00);
	beta[17, 7] ~ normal(0,1.00);
	beta[17, 8] ~ normal(0,1.00);
	beta[17, 9] ~ normal(0,1.00);
	beta[17, 10] ~ normal(0,1.00);
	beta[17, 11] ~ normal(0,1.00);
	beta[17, 12] ~ normal(0,1.00);
	beta[17, 13] ~ normal(0,1.00);
	beta[17, 14] ~ normal(0,1.00);
	beta[17, 15] ~ normal(0,1.00);
	beta[17, 16] ~ normal(0,1.00);
	beta[17, 17] ~ normal(0,1.00);
	beta[17, 18] ~ normal(0,1.00);
	beta[17, 19] ~ normal(0,1.00);
	beta[17, 20] ~ normal(0,1.00);
	beta[17, 21] ~ normal(0,1.00);
	beta[18, 1] ~ normal(0,1.00);
	beta[18, 2] ~ normal(0,1.00);
	beta[18, 3] ~ normal(0,1.00);
	beta[18, 4] ~ normal(0,1.00);
	beta[18, 5] ~ normal(0,1.00);
	beta[18, 6] ~ normal(0,1.00);
	beta[18, 7] ~ normal(0,1.00);
	beta[18, 8] ~ normal(0,1.00);
	beta[18, 9] ~ normal(0,1.00);
	beta[18, 10] ~ normal(0,1.00);
	beta[18, 11] ~ normal(0,1.00);
	beta[18, 12] ~ normal(0,1.00);
	beta[18, 13] ~ normal(0,1.00);
	beta[18, 14] ~ normal(0,1.00);
	beta[18, 15] ~ normal(0,1.00);
	beta[18, 16] ~ normal(0,1.00);
	beta[18, 17] ~ normal(0,1.00);
	beta[18, 18] ~ normal(0,1.00);
	beta[18, 19] ~ normal(0,1.00);
	beta[18, 20] ~ normal(0,1.00);
	beta[18, 21] ~ normal(0,1.00);
	beta[19, 1] ~ normal(0,1.00);
	beta[19, 2] ~ normal(0,1.00);
	beta[19, 3] ~ normal(0,1.00);
	beta[19, 4] ~ normal(0,1.00);
	beta[19, 5] ~ normal(0,1.00);
	beta[19, 6] ~ normal(0,1.00);
	beta[19, 7] ~ normal(0,1.00);
	beta[19, 8] ~ normal(0,1.00);
	beta[19, 9] ~ normal(0,1.00);
	beta[19, 10] ~ normal(0,1.00);
	beta[19, 11] ~ normal(0,1.00);
	beta[19, 12] ~ normal(0,1.00);
	beta[19, 13] ~ normal(0,1.00);
	beta[19, 14] ~ normal(0,1.00);
	beta[19, 15] ~ normal(0,1.00);
	beta[19, 16] ~ normal(0,1.00);
	beta[19, 17] ~ normal(0,1.00);
	beta[19, 18] ~ normal(0,1.00);
	beta[19, 19] ~ normal(0,1.00);
	beta[19, 20] ~ normal(0,1.00);
	beta[19, 21] ~ normal(0,1.00);
	beta[20, 1] ~ normal(0,1.00);
	beta[20, 2] ~ normal(0,1.00);
	beta[20, 3] ~ normal(0,1.00);
	beta[20, 4] ~ normal(0,1.00);
	beta[20, 5] ~ normal(0,1.00);
	beta[20, 6] ~ normal(0,1.00);
	beta[20, 7] ~ normal(0,1.00);
	beta[20, 8] ~ normal(0,1.00);
	beta[20, 9] ~ normal(0,1.00);
	beta[20, 10] ~ normal(0,1.00);
	beta[20, 11] ~ normal(0,1.00);
	beta[20, 12] ~ normal(0,1.00);
	beta[20, 13] ~ normal(0,1.00);
	beta[20, 14] ~ normal(0,1.00);
	beta[20, 15] ~ normal(0,1.00);
	beta[20, 16] ~ normal(0,1.00);
	beta[20, 17] ~ normal(0,1.00);
	beta[20, 18] ~ normal(0,1.00);
	beta[20, 19] ~ normal(0,1.00);
	beta[20, 20] ~ normal(0,1.00);
	beta[20, 21] ~ normal(0,1.00);
	beta[21, 1] ~ normal(0,1.00);
	beta[21, 2] ~ normal(0,1.00);
	beta[21, 3] ~ normal(0,1.00);
	beta[21, 4] ~ normal(0,1.00);
	beta[21, 5] ~ normal(0,1.00);
	beta[21, 6] ~ normal(0,1.00);
	beta[21, 7] ~ normal(0,1.00);
	beta[21, 8] ~ normal(0,1.00);
	beta[21, 9] ~ normal(0,1.00);
	beta[21, 10] ~ normal(0,1.00);
	beta[21, 11] ~ normal(0,1.00);
	beta[21, 12] ~ normal(0,1.00);
	beta[21, 13] ~ normal(0,1.00);
	beta[21, 14] ~ normal(0,1.00);
	beta[21, 15] ~ normal(0,1.00);
	beta[21, 16] ~ normal(0,1.00);
	beta[21, 17] ~ normal(0,1.00);
	beta[21, 18] ~ normal(0,1.00);
	beta[21, 19] ~ normal(0,1.00);
	beta[21, 20] ~ normal(0,1.00);
	beta[21, 21] ~ normal(0,1.00);
	epsilon[1, 1] ~ normal(0,1.00);
	epsilon[1, 2] ~ normal(0,1.00);
	epsilon[1, 3] ~ normal(0,1.00);
	epsilon[1, 4] ~ normal(0,1.00);
	epsilon[1, 5] ~ normal(0,1.00);
	epsilon[1, 6] ~ normal(0,1.00);
	epsilon[2, 1] ~ normal(0,1.00);
	epsilon[2, 2] ~ normal(0,1.00);
	epsilon[2, 3] ~ normal(0,1.00);
	epsilon[2, 4] ~ normal(0,1.00);
	epsilon[2, 5] ~ normal(0,1.00);
	epsilon[2, 6] ~ normal(0,1.00);
	epsilon[3, 1] ~ normal(0,1.00);
	epsilon[3, 2] ~ normal(0,1.00);
	epsilon[3, 3] ~ normal(0,1.00);
	epsilon[3, 4] ~ normal(0,1.00);
	epsilon[3, 5] ~ normal(0,1.00);
	epsilon[3, 6] ~ normal(0,1.00);
	epsilon[4, 1] ~ normal(0,1.00);
	epsilon[4, 2] ~ normal(0,1.00);
	epsilon[4, 3] ~ normal(0,1.00);
	epsilon[4, 4] ~ normal(0,1.00);
	epsilon[4, 5] ~ normal(0,1.00);
	epsilon[4, 6] ~ normal(0,1.00);
	epsilon[5, 1] ~ normal(0,1.00);
	epsilon[5, 2] ~ normal(0,1.00);
	epsilon[5, 3] ~ normal(0,1.00);
	epsilon[5, 4] ~ normal(0,1.00);
	epsilon[5, 5] ~ normal(0,1.00);
	epsilon[5, 6] ~ normal(0,1.00);
	epsilon[6, 1] ~ normal(0,1.00);
	epsilon[6, 2] ~ normal(0,1.00);
	epsilon[6, 3] ~ normal(0,1.00);
	epsilon[6, 4] ~ normal(0,1.00);
	epsilon[6, 5] ~ normal(0,1.00);
	epsilon[6, 6] ~ normal(0,1.00);
	epsilon[7, 1] ~ normal(0,1.00);
	epsilon[7, 2] ~ normal(0,1.00);
	epsilon[7, 3] ~ normal(0,1.00);
	epsilon[7, 4] ~ normal(0,1.00);
	epsilon[7, 5] ~ normal(0,1.00);
	epsilon[7, 6] ~ normal(0,1.00);
	epsilon[8, 1] ~ normal(0,1.00);
	epsilon[8, 2] ~ normal(0,1.00);
	epsilon[8, 3] ~ normal(0,1.00);
	epsilon[8, 4] ~ normal(0,1.00);
	epsilon[8, 5] ~ normal(0,1.00);
	epsilon[8, 6] ~ normal(0,1.00);
	epsilon[9, 1] ~ normal(0,1.00);
	epsilon[9, 2] ~ normal(0,1.00);
	epsilon[9, 3] ~ normal(0,1.00);
	epsilon[9, 4] ~ normal(0,1.00);
	epsilon[9, 5] ~ normal(0,1.00);
	epsilon[9, 6] ~ normal(0,1.00);
	epsilon[10, 1] ~ normal(0,1.00);
	epsilon[10, 2] ~ normal(0,1.00);
	epsilon[10, 3] ~ normal(0,1.00);
	epsilon[10, 4] ~ normal(0,1.00);
	epsilon[10, 5] ~ normal(0,1.00);
	epsilon[10, 6] ~ normal(0,1.00);
	epsilon[11, 1] ~ normal(0,1.00);
	epsilon[11, 2] ~ normal(0,1.00);
	epsilon[11, 3] ~ normal(0,1.00);
	epsilon[11, 4] ~ normal(0,1.00);
	epsilon[11, 5] ~ normal(0,1.00);
	epsilon[11, 6] ~ normal(0,1.00);
	epsilon[12, 1] ~ normal(0,1.00);
	epsilon[12, 2] ~ normal(0,1.00);
	epsilon[12, 3] ~ normal(0,1.00);
	epsilon[12, 4] ~ normal(0,1.00);
	epsilon[12, 5] ~ normal(0,1.00);
	epsilon[12, 6] ~ normal(0,1.00);
	epsilon[13, 1] ~ normal(0,1.00);
	epsilon[13, 2] ~ normal(0,1.00);
	epsilon[13, 3] ~ normal(0,1.00);
	epsilon[13, 4] ~ normal(0,1.00);
	epsilon[13, 5] ~ normal(0,1.00);
	epsilon[13, 6] ~ normal(0,1.00);
	epsilon[14, 1] ~ normal(0,1.00);
	epsilon[14, 2] ~ normal(0,1.00);
	epsilon[14, 3] ~ normal(0,1.00);
	epsilon[14, 4] ~ normal(0,1.00);
	epsilon[14, 5] ~ normal(0,1.00);
	epsilon[14, 6] ~ normal(0,1.00);
	epsilon[15, 1] ~ normal(0,1.00);
	epsilon[15, 2] ~ normal(0,1.00);
	epsilon[15, 3] ~ normal(0,1.00);
	epsilon[15, 4] ~ normal(0,1.00);
	epsilon[15, 5] ~ normal(0,1.00);
	epsilon[15, 6] ~ normal(0,1.00);
	epsilon[16, 1] ~ normal(0,1.00);
	epsilon[16, 2] ~ normal(0,1.00);
	epsilon[16, 3] ~ normal(0,1.00);
	epsilon[16, 4] ~ normal(0,1.00);
	epsilon[16, 5] ~ normal(0,1.00);
	epsilon[16, 6] ~ normal(0,1.00);
	epsilon[17, 1] ~ normal(0,1.00);
	epsilon[17, 2] ~ normal(0,1.00);
	epsilon[17, 3] ~ normal(0,1.00);
	epsilon[17, 4] ~ normal(0,1.00);
	epsilon[17, 5] ~ normal(0,1.00);
	epsilon[17, 6] ~ normal(0,1.00);
	epsilon[18, 1] ~ normal(0,1.00);
	epsilon[18, 2] ~ normal(0,1.00);
	epsilon[18, 3] ~ normal(0,1.00);
	epsilon[18, 4] ~ normal(0,1.00);
	epsilon[18, 5] ~ normal(0,1.00);
	epsilon[18, 6] ~ normal(0,1.00);
	epsilon[19, 1] ~ normal(0,1.00);
	epsilon[19, 2] ~ normal(0,1.00);
	epsilon[19, 3] ~ normal(0,1.00);
	epsilon[19, 4] ~ normal(0,1.00);
	epsilon[19, 5] ~ normal(0,1.00);
	epsilon[19, 6] ~ normal(0,1.00);
	epsilon[20, 1] ~ normal(0,1.00);
	epsilon[20, 2] ~ normal(0,1.00);
	epsilon[20, 3] ~ normal(0,1.00);
	epsilon[20, 4] ~ normal(0,1.00);
	epsilon[20, 5] ~ normal(0,1.00);
	epsilon[20, 6] ~ normal(0,1.00);
	epsilon[21, 1] ~ normal(0,1.00);
	epsilon[21, 2] ~ normal(0,1.00);
	epsilon[21, 3] ~ normal(0,1.00);
	epsilon[21, 4] ~ normal(0,1.00);
	epsilon[21, 5] ~ normal(0,1.00);
	epsilon[21, 6] ~ normal(0,1.00);
	vector[N] mean = growth * alpha + interaction * row_wise_to_vector(beta) + perturbation * row_wise_to_vector(epsilon);
	dlogX ~ normal(mean, sigma);
}